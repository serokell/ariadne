module Ariadne.Cardano.Face
       ( CardanoContext
       , CardanoMode
       , CardanoStatusUpdate (..)
       , CardanoEvent (..)

       -- * Re-exports from Cardano
       , EpochOrSlot (..)
       , EpochIndex (..)
       , SlotId (..)
       , HeaderHash
       , Address

       , AccountData (..)
       , WalletData (..)
       , UserSecret
       , usWallets
       ) where

import Universum

import Control.Monad.Trans.Reader (ReaderT)
import Mockable (Production)
import Pos.Core
  (Address, EpochIndex(..), EpochOrSlot(..), HeaderHash, SlotId(..))
import Pos.Util.UserSecret
  (AccountData(..), UserSecret, WalletData(..), usWallets)
import Pos.WorkMode (EmptyMempoolExt, RealModeContext)

data CardanoStatusUpdate = CardanoStatusUpdate
  { tipHeaderHash :: HeaderHash
  , tipEpochOrSlot :: EpochOrSlot
  , currentSlot :: SlotId
  , isInaccurate :: Bool
  }

-- | Events as generated by the Cardano node. They will be translated into
-- UI-compatible events in the 'Glue' module. They must be independent from the
-- UI and capture /what the backend can generate/, not what the frontend can
-- handle.
data CardanoEvent
  = CardanoLogEvent Text
  | CardanoStatusUpdateEvent CardanoStatusUpdate

type CardanoContext = RealModeContext EmptyMempoolExt

type CardanoMode = ReaderT CardanoContext Production
