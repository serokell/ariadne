steps:
  - simple_align:
      cases: false
      top_level_patterns: false
      records: false
  - imports:
      align: none
      list_align: after_alias
      pad_module_names: false
      long_list_align: new_line
      empty_list_align: inherit
      list_padding: 2
      separate_lists: false
      space_surround: false
  - language_pragmas:
      style: compact
      remove_redundant: true
  - trailing_whitespace: {}
columns: 80
newline: native
language_extensions:
  - BangPatterns
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveGeneric
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - OverloadedLabels
  - RecordWildCards
  - RecursiveDo
  - ExistentialQuantification
  - ExplicitNamespaces
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - ViewPatterns
  - EmptyCase
